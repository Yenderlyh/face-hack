<h2>Edit job: {{title}}</h2>

<form action="/jobs/{{id}}" method="post" class="uk-grid-small general-forms" uk-grid>
    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl">
        <label class="uk-form-label" for="form-stacked-text">Title:</label>
        <div class="uk-form-controls">
            <input id="form-stacked-text" class="uk-input uk-form-width-medium" type="text" name="title" value="{{title}}">
        </div>
    </div>

    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl">
        <label class="uk-form-label" for="form-stacked-text">Company:</label>
        <div class="uk-form-controls">
            <input id="form-stacked-text" class="uk-input uk-form-width-medium" type="text" name="company" value="{{company}}">
        </div>
    </div>

    <input type="hidden" id="coord" value="{{location.coordinates}}">
    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl">
        <div id='map' style='height: 300px;'></div>
        <script>
        const loc = document.getElementById('coord').value;
        if(loc !== ""){
            const locArray = loc.split(',');
            mapboxgl.accessToken = 'pk.eyJ1Ijoibml4aWVzY3JlYW0iLCJhIjoiY2prMHo4MWF0MGI5OTNxczE1bWo5eHN5ZSJ9.fopBwvYRECh6vF6e6v7rRg';
            const map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v9',
                center: [locArray[0], locArray[1]],
                zoom: 16
            });

            const marker = new mapboxgl.Marker()
                .setLngLat([locArray[0], locArray[1]])
                .addTo(map);
            
            const geocoder = new MapboxGeocoder({
                accessToken: mapboxgl.accessToken
            });

            map.addControl(geocoder);

            map.on('load', () => {
                map.addSource('single-point', {
                    "type": "geojson",
                    "data": {
                        "type": "FeatureCollection",
                        "features": []
                    }
                });

                map.addLayer({
                    "id": "point",
                    "source": "single-point",
                    "type": "circle",
                    "paint": {
                        "circle-radius": 5,
                        "circle-color": "#007cbf"
                    }
                });

                geocoder.on('result', function(ev) {
                    const marker = new mapboxgl.Marker()
                        .setLngLat([ev.result.geometry.coordinates[0], ev.result.geometry.coordinates[1]])
                        .addTo(map);
                    document.getElementById('coord-long').value = ev.result.geometry.coordinates[0];
                    document.getElementById('coord-lat').value = ev.result.geometry.coordinates[1];
                });
            });

        } else {
            function success(pos) {
                const crd = pos.coords;
                mapboxgl.accessToken = 'pk.eyJ1Ijoibml4aWVzY3JlYW0iLCJhIjoiY2prMHo4MWF0MGI5OTNxczE1bWo5eHN5ZSJ9.fopBwvYRECh6vF6e6v7rRg';
                const map = new mapboxgl.Map({
                    container: 'map',
                    style: 'mapbox://styles/mapbox/streets-v9',
                    center: [crd.longitude, crd.latitude],
                    zoom: 13
                });

                const geocoder = new MapboxGeocoder({
                accessToken: mapboxgl.accessToken
                });

                map.addControl(geocoder);

                map.on('load', () => {
                    map.addSource('single-point', {
                        "type": "geojson",
                        "data": {
                            "type": "FeatureCollection",
                            "features": []
                        }
                    });

                    map.addLayer({
                        "id": "point",
                        "source": "single-point",
                        "type": "circle",
                        "paint": {
                            "circle-radius": 5,
                            "circle-color": "#007cbf"
                        }
                    });

                    geocoder.on('result', function(ev) {
                        const marker = new mapboxgl.Marker()
                            .setLngLat([ev.result.geometry.coordinates[0], ev.result.geometry.coordinates[1]])
                            .addTo(map);
                        document.getElementById('coord-long').value = ev.result.geometry.coordinates[0];
                        document.getElementById('coord-lat').value = ev.result.geometry.coordinates[1];
                    });
                });
            }
            navigator.geolocation.getCurrentPosition(success);
        }
    </script>
    <input type="hidden" name="locationLong" id="coord-long">
    <input type="hidden" name="locationLat" id="coord-lat">

    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl">
        <label class="uk-form-label" for="form-stacked-text">Type:</label>
        <select name="type">
            {{#ifEquals type "webdev"}}  
                <option value="webdev" selected>Web development</option>
                <option value="ux-ui">UX/UI design</option>
            {{/ifEquals}}
            {{#ifEquals type "ux-ui"}}
                <option value="webdev">Web development</option>
                <option value="ux-ui" selected>UX/UI design</option>
            {{/ifEquals}}
        </select>
    </div>

    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl">
        <label class="uk-form-label" for="form-stacked-text">Description:</label>
        <div class="uk-form-controls">
            <input id="form-stacked-text" class="uk-input uk-form-width-medium" type="text" name="description" value="{{description}}">
        </div>
    </div>

    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl">
        <label class="uk-form-label" for="form-stacked-text">Salary:</label>
        <div class="uk-form-controls">
            <input id="form-stacked-text" class="uk-input uk-form-width-medium" type="number" name="salary" value="{{salary}}">
        </div>
    </div>
    
    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl">
        <label class="uk-form-label" for="form-stacked-text">Journey type:</label>
        <select name="journeyType">
            {{#ifEquals journeyType "part-time"}}
                <option value="part-time" selected>Part-time</option>
                <option value="full-time">Full-time</option>
            {{/ifEquals}}
            {{#ifEquals journeyType "full-time"}}
                <option value="part-time">Part-time</option>
                <option value="full-time" selected>Full-time</option>      
            {{/ifEquals}}
        </select>
    </div>

    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl">
        <label class="uk-form-label" for="form-stacked-text">Vacancies:</label>
        <div class="uk-form-controls">
            <input id="form-stacked-text" class="uk-input uk-form-width-medium" type="number" name="vacancies" value="{{vacancies}}">
        </div>
    </div>

    <div class="uk-width-1-1@s uk-width-1-2@m uk-width-1-5@l uk-width-1-7@xl uk-margin-top uk-margin-bottom" uk-margin>
        <button class="uk-button uk-button-default uk-button-primary" type="submit">Update</button>
    </div>
</form>